AWSTemplateFormatVersion: '2010-09-09'
Resources:
  EmailLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'SendEmailLambdaFunction'
      Handler: 'email_handler.lambda_handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: cloudformation-templates-shared
        S3Key: email-plugin/email_handler.zip
      Runtime: 'python3.8'
      Timeout: 30

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'SendEmailLambdaExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaDynamoDBPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'dynamodb:GetItem'
                Resource: !ImportValue ApiKeyEmailTableArn
        - PolicyName: 'LambdaSESPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ses:SendEmail'
                  - 'ses:SendRawEmail'
                Resource: '*'
Outputs:
  EmailLambdaFunctionArn:
    Value: !GetAtt EmailLambdaFunction.Arn
    Export:
      Name: EmailLambdaFunctionArn
